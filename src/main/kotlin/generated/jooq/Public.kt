/*
 * This file is generated by jOOQ.
 */
package generated.jooq


import generated.jooq.tables.Artists
import generated.jooq.tables.ReleaseFeatures
import generated.jooq.tables.Releases
import generated.jooq.tables.TrackFeatures
import generated.jooq.tables.Tracks

import kotlin.collections.List

import org.jooq.Catalog
import org.jooq.Table
import org.jooq.impl.SchemaImpl


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class Public : SchemaImpl("public", DefaultCatalog.DEFAULT_CATALOG) {
    companion object {

        /**
         * The reference instance of <code>public</code>
         */
        val PUBLIC: Public = Public()
    }

    /**
     * The table <code>public.artists</code>.
     */
    val ARTISTS: Artists get() = Artists.ARTISTS

    /**
     * The table <code>public.release_features</code>.
     */
    val RELEASE_FEATURES: ReleaseFeatures get() = ReleaseFeatures.RELEASE_FEATURES

    /**
     * The table <code>public.releases</code>.
     */
    val RELEASES: Releases get() = Releases.RELEASES

    /**
     * The table <code>public.track_features</code>.
     */
    val TRACK_FEATURES: TrackFeatures get() = TrackFeatures.TRACK_FEATURES

    /**
     * The table <code>public.tracks</code>.
     */
    val TRACKS: Tracks get() = Tracks.TRACKS

    override fun getCatalog(): Catalog = DefaultCatalog.DEFAULT_CATALOG

    override fun getTables(): List<Table<*>> = listOf(
        Artists.ARTISTS,
        ReleaseFeatures.RELEASE_FEATURES,
        Releases.RELEASES,
        TrackFeatures.TRACK_FEATURES,
        Tracks.TRACKS
    )
}
