/*
 * This file is generated by jOOQ.
 */
package generated.jooq.keys


import generated.jooq.tables.Artists
import generated.jooq.tables.ReleaseFeatures
import generated.jooq.tables.Releases
import generated.jooq.tables.TrackFeatures
import generated.jooq.tables.Tracks
import generated.jooq.tables.records.ArtistsRecord
import generated.jooq.tables.records.ReleaseFeaturesRecord
import generated.jooq.tables.records.ReleasesRecord
import generated.jooq.tables.records.TrackFeaturesRecord
import generated.jooq.tables.records.TracksRecord

import org.jooq.ForeignKey
import org.jooq.UniqueKey
import org.jooq.impl.DSL
import org.jooq.impl.Internal



// -------------------------------------------------------------------------
// UNIQUE and PRIMARY KEY definitions
// -------------------------------------------------------------------------

val ARTISTS_PKEY: UniqueKey<ArtistsRecord> = Internal.createUniqueKey(Artists.ARTISTS, DSL.name("artists_pkey"), arrayOf(Artists.ARTISTS.ID), true)
val RELEASE_FEATURES_PKEY: UniqueKey<ReleaseFeaturesRecord> = Internal.createUniqueKey(ReleaseFeatures.RELEASE_FEATURES, DSL.name("release_features_pkey"), arrayOf(ReleaseFeatures.RELEASE_FEATURES.ARTIST_ID, ReleaseFeatures.RELEASE_FEATURES.RELEASE_ID), true)
val RELEASES_PKEY: UniqueKey<ReleasesRecord> = Internal.createUniqueKey(Releases.RELEASES, DSL.name("releases_pkey"), arrayOf(Releases.RELEASES.ID), true)
val TRACK_FEATURES_PKEY: UniqueKey<TrackFeaturesRecord> = Internal.createUniqueKey(TrackFeatures.TRACK_FEATURES, DSL.name("track_features_pkey"), arrayOf(TrackFeatures.TRACK_FEATURES.ARTIST_ID, TrackFeatures.TRACK_FEATURES.RELEASE_ID, TrackFeatures.TRACK_FEATURES.NUMBER), true)
val TRACKS_PKEY: UniqueKey<TracksRecord> = Internal.createUniqueKey(Tracks.TRACKS, DSL.name("tracks_pkey"), arrayOf(Tracks.TRACKS.RELEASE_ID, Tracks.TRACKS.NUMBER), true)

// -------------------------------------------------------------------------
// FOREIGN KEY definitions
// -------------------------------------------------------------------------

val RELEASE_FEATURES__RELEASE_FEATURES_ARTIST_ID_FKEY: ForeignKey<ReleaseFeaturesRecord, ArtistsRecord> = Internal.createForeignKey(ReleaseFeatures.RELEASE_FEATURES, DSL.name("release_features_artist_id_fkey"), arrayOf(ReleaseFeatures.RELEASE_FEATURES.ARTIST_ID), generated.jooq.keys.ARTISTS_PKEY, arrayOf(Artists.ARTISTS.ID), true)
val RELEASE_FEATURES__RELEASE_FEATURES_RELEASE_ID_FKEY: ForeignKey<ReleaseFeaturesRecord, ReleasesRecord> = Internal.createForeignKey(ReleaseFeatures.RELEASE_FEATURES, DSL.name("release_features_release_id_fkey"), arrayOf(ReleaseFeatures.RELEASE_FEATURES.RELEASE_ID), generated.jooq.keys.RELEASES_PKEY, arrayOf(Releases.RELEASES.ID), true)
val TRACK_FEATURES__TRACK_FEATURES_ARTIST_ID_FKEY: ForeignKey<TrackFeaturesRecord, ArtistsRecord> = Internal.createForeignKey(TrackFeatures.TRACK_FEATURES, DSL.name("track_features_artist_id_fkey"), arrayOf(TrackFeatures.TRACK_FEATURES.ARTIST_ID), generated.jooq.keys.ARTISTS_PKEY, arrayOf(Artists.ARTISTS.ID), true)
val TRACK_FEATURES__TRACK_FEATURES_RELEASE_ID_NUMBER_FKEY: ForeignKey<TrackFeaturesRecord, TracksRecord> = Internal.createForeignKey(TrackFeatures.TRACK_FEATURES, DSL.name("track_features_release_id_number_fkey"), arrayOf(TrackFeatures.TRACK_FEATURES.RELEASE_ID, TrackFeatures.TRACK_FEATURES.NUMBER), generated.jooq.keys.TRACKS_PKEY, arrayOf(Tracks.TRACKS.RELEASE_ID, Tracks.TRACKS.NUMBER), true)
val TRACKS__TRACKS_RELEASE_ID_FKEY: ForeignKey<TracksRecord, ReleasesRecord> = Internal.createForeignKey(Tracks.TRACKS, DSL.name("tracks_release_id_fkey"), arrayOf(Tracks.TRACKS.RELEASE_ID), generated.jooq.keys.RELEASES_PKEY, arrayOf(Releases.RELEASES.ID), true)
